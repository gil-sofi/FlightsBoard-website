@model WebApplication5.Models.User
<div class="contianer">
    <div class="row">
        <div class="col-md-12">
            <div class="jumbotron" style="background-image:url(https://images.pexels.com/photos/461077/pexels-photo-461077.jpeg?cs=srgb&dl=ballpen-blur-close-up-computer-461077.jpg&fm=jpg); background-size:cover; background-position: center;">

                @{
                    ViewBag.Title = "Create";
                }

                <h2>User Registration</h2>


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.confirmpassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox"  id="checkboxswitch" onclick="switchBox()">

                               @Html.EditorFor(model => model.type, "", new { }) 
                                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <script>
                        function switchBox() {
                            var pas = prompt("Please enter your personal pass ", "pass");
                            if (pas != 42) {
                                for (i = 0; i < 3; i++) {
                                    var pas = prompt("Please enter your personal pass ", "pass");
                                    if (pas == 42) {
                                        break;
                                    }
                                     
                                     
                                }
                                if (pas != 42) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'wrong password! ',
                                        footer: '<a>please contact support team</a>'
                                    });
                                    var list = document.getElementById("checkboxswitch");
                                    list.parentNode.removeChild(list);
                                }
                            }
                        }
                    </script>




                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Submit" class="btn btn-dark" />
                            <input type="reset" value="Reset" class="btn btn-dark" />
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
